// Generated by view binder compiler. Do not edit!
package br.com.mateus.yourtip.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.mateus.yourtip.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText costOfService;

  @NonNull
  public final RadioButton optionEightPercent;

  @NonNull
  public final RadioButton optionFifteenPercent;

  @NonNull
  public final RadioButton optionTenPercent;

  @NonNull
  public final SwitchCompat roundUpSwitch;

  @NonNull
  public final TextView serviceQuestion;

  @NonNull
  public final Button tipCalculateButton;

  @NonNull
  public final ImageView tipImage;

  @NonNull
  public final RadioGroup tipOptions;

  @NonNull
  public final TextView tipResult;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull EditText costOfService,
      @NonNull RadioButton optionEightPercent, @NonNull RadioButton optionFifteenPercent,
      @NonNull RadioButton optionTenPercent, @NonNull SwitchCompat roundUpSwitch,
      @NonNull TextView serviceQuestion, @NonNull Button tipCalculateButton,
      @NonNull ImageView tipImage, @NonNull RadioGroup tipOptions, @NonNull TextView tipResult) {
    this.rootView = rootView;
    this.costOfService = costOfService;
    this.optionEightPercent = optionEightPercent;
    this.optionFifteenPercent = optionFifteenPercent;
    this.optionTenPercent = optionTenPercent;
    this.roundUpSwitch = roundUpSwitch;
    this.serviceQuestion = serviceQuestion;
    this.tipCalculateButton = tipCalculateButton;
    this.tipImage = tipImage;
    this.tipOptions = tipOptions;
    this.tipResult = tipResult;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cost_of_service;
      EditText costOfService = ViewBindings.findChildViewById(rootView, id);
      if (costOfService == null) {
        break missingId;
      }

      id = R.id.option_eight_percent;
      RadioButton optionEightPercent = ViewBindings.findChildViewById(rootView, id);
      if (optionEightPercent == null) {
        break missingId;
      }

      id = R.id.option_fifteen_percent;
      RadioButton optionFifteenPercent = ViewBindings.findChildViewById(rootView, id);
      if (optionFifteenPercent == null) {
        break missingId;
      }

      id = R.id.option_ten_percent;
      RadioButton optionTenPercent = ViewBindings.findChildViewById(rootView, id);
      if (optionTenPercent == null) {
        break missingId;
      }

      id = R.id.round_up_switch;
      SwitchCompat roundUpSwitch = ViewBindings.findChildViewById(rootView, id);
      if (roundUpSwitch == null) {
        break missingId;
      }

      id = R.id.service_question;
      TextView serviceQuestion = ViewBindings.findChildViewById(rootView, id);
      if (serviceQuestion == null) {
        break missingId;
      }

      id = R.id.tip_calculate_button;
      Button tipCalculateButton = ViewBindings.findChildViewById(rootView, id);
      if (tipCalculateButton == null) {
        break missingId;
      }

      id = R.id.tip_image;
      ImageView tipImage = ViewBindings.findChildViewById(rootView, id);
      if (tipImage == null) {
        break missingId;
      }

      id = R.id.tip_options;
      RadioGroup tipOptions = ViewBindings.findChildViewById(rootView, id);
      if (tipOptions == null) {
        break missingId;
      }

      id = R.id.tip_result;
      TextView tipResult = ViewBindings.findChildViewById(rootView, id);
      if (tipResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, costOfService, optionEightPercent,
          optionFifteenPercent, optionTenPercent, roundUpSwitch, serviceQuestion,
          tipCalculateButton, tipImage, tipOptions, tipResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
